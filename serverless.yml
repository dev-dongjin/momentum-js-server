# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: js-app-server
# app and org for use with dashboard.serverless.com
app: js-app-server
org: devdongjin

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
  logs:
    logGroupName: /aws/lambda/${self:service}-${self:provider.stage}-getWeather
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:GetItem'
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.stage}-WeatherCacheTable

resources:
  Resources:
    WeatherCacheTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-WeatherCacheTable
        AttributeDefinitions:
          - AttributeName: latitude
            AttributeType: N
          - AttributeName: longitude
            AttributeType: N
        KeySchema:
          - AttributeName: latitude
            KeyType: HASH
          - AttributeName: longitude
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

functions:
  hello:
    handler: handler.hello
  getWeather:
    handler: handler.getWeather
    events:
      - http:
          path: weather
          method: get
          cors:
            origins:
              - 'https://dev-dongjin.github.io'
